{
  "openapi": "3.0.0",
  "info": {
    "title": "Chainsleuth Agent",
    "description": "API for interacting with Chainsleuth account investigation, token swaps, and Pikespeak data retrieval",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://chain-sleuth.vercel.app"
    }
  ],
  "x-mb": {
    "account-id": "chainsleuth.near",
    "assistant": {
      "name": "Chainsleuth Assistant",
      "description": "Assistant for using the Chainsleuth API to retrieve token metadata, perform token swaps, and analyze NEAR blockchain data via Pikespeak.",
      "instructions": "You are an assistant that helps users interact with the Chainsleuth API. You can retrieve token metadata, generate swap transactions, analyze NEAR blockchain info from Pikespeak, and investigate NEAR Protocol wallet addresses.",
      "tools": [
        {
          "type": "generate-transaction"
        }
      ]
    }
  },
  "paths": {
    "/api/{token}": {
      "get": {
        "description": "Fetch metadata for a specific token using fuzzy search by name, symbol, or identifier.",
        "operationId": "getTokenMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name, symbol, or identifier of the token to search for and retrieve metadata."
          }
        ],
        "responses": {
          "200": {
            "description": "Token metadata retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "decimals": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "spec": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string",
                      "format": "data-url",
                      "description": "Base64 encoded image data for the token icon."
                    }
                  },
                  "required": ["name", "symbol", "decimals", "id", "spec", "icon"]
                }
              }
            }
          }
        }
      }
    },
    "/api/swap/{tokenIn}/{tokenOut}/{quantity}": {
      "get": {
        "summary": "Get swap transactions",
        "description": "An array of transaction objects necessary to execute the swap, including any required preliminary actions like storage deposits.",
        "operationId": "getSwapTransactions",
        "parameters": [
          {
            "in": "path",
            "name": "tokenIn",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name, symbol, or identifier of the token to input in the swap."
          },
          {
            "in": "path",
            "name": "tokenOut",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name, symbol, or identifier of the token to output in the swap."
          },
          {
            "in": "path",
            "name": "quantity",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The amount of the input token to swap."
          }
        ],
        "responses": {
          "200": {
            "description": "Swap transactions generated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "receiverId": {
                        "type": "string",
                        "description": "The account ID of the contract that will receive the transaction."
                      },
                      "functionCalls": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "methodName": {
                              "type": "string",
                              "description": "The name of the method to be called on the contract."
                            },
                            "args": {
                              "type": "object",
                              "description": "Arguments for the function call.",
                              "properties": {
                                "registration_only": {
                                  "type": "boolean"
                                },
                                "account_id": {
                                  "type": "string"
                                },
                                "receiver_id": {
                                  "type": "string"
                                },
                                "amount": {
                                  "type": "string"
                                },
                                "msg": {
                                  "type": "string",
                                  "description": "A JSON string containing swap actions and parameters. Shows minimum amount of tokens to receive."
                                }
                              },
                              "additionalProperties": true
                            },
                            "gas": {
                              "type": "string",
                              "description": "The amount of gas to attach to the transaction, in yoctoNEAR."
                            },
                            "amount": {
                              "type": "string",
                              "description": "The amount of NEAR tokens to attach to the transaction, in yoctoNEAR."
                            }
                          },
                          "required": ["methodName", "args", "gas", "amount"]
                        }
                      }
                    },
                    "required": ["receiverId", "functionCalls"]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pikespeak/ping": {
      "get": {
        "description": "A Ping for testing connection to Pikespeak API",
        "summary": "Check Pikespeak API connectivity",
        "operationId": "pingPikespeak",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pikespeak/account/transactions/{contract}": {
      "get": {
        "summary": "Get Raw Transactions for a Given Account",
        "description": "Retrieves raw transactions for a specified account (contract).",
        "operationId": "getAccountTransactions",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query transactions for."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "default": 50
            },
            "description": "Limit the number of results. Maximum 50, defaults to 50 if not specified."
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Offset for pagination. Defaults to 0 if not specified."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/pikespeak/account/tx-count/{contract}": {
      "get": {
        "summary": "Get Total Number of Transactions for a Given Account",
        "description": "Retrieves the total number of transactions for a specified account (contract).",
        "operationId": "getAccountTransactionCount",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query transaction count for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account transaction count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tx_count": {
                      "type": "integer",
                      "description": "Total number of transactions for the account"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/pikespeak/account/balance/{contract}": {
      "get": {
        "summary": "Get Account Balance",
        "description": "Retrieves the balance for a specified account (contract).",
        "operationId": "getAccountBalance",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query balance for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/wealth/{contract}": {
      "get": {
        "summary": "Get Account Wealth",
        "description": "Retrieves the wealth information for a specified account (contract).",
        "operationId": "getAccountWealth",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query wealth for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account wealth information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/{infos}/{contract}": {
      "get": {
        "summary": "Get Account Information",
        "description": "Retrieves various information for a specified account (contract).",
        "operationId": "getAccountInfo",
        "parameters": [
          {
            "in": "path",
            "name": "infos",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The type of information to retrieve (e.g., 'activity', 'ft-transfers', etc.)."
          },
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query information for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/ft-transfer/{contract}": {
      "get": {
        "summary": "Get FT Transfers for a Given Account",
        "description": "Retrieves FT transfers for a specified account (contract).",
        "operationId": "getAccountFTTransfers",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query FT transfers for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account FT transfers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/incoming-near/{contract}": {
      "get": {
        "summary": "Get Incoming NEAR for a Given Account",
        "description": "Retrieves incoming NEAR transactions for a specified account (contract).",
        "operationId": "getAccountIncomingNEAR",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query incoming NEAR for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account incoming NEAR",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/outgoing-near/{contract}": {
      "get": {
        "summary": "Get Outgoing NEAR for a Given Account",
        "description": "Retrieves outgoing NEAR transactions for a specified account (contract).",
        "operationId": "getAccountOutgoingNEAR",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query outgoing NEAR for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account outgoing NEAR",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/incoming-token/{contract}": {
      "get": {
        "summary": "Get Incoming Tokens for a Given Account",
        "description": "Retrieves incoming token transactions for a specified account (contract).",
        "operationId": "getAccountIncomingTokens",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query incoming tokens for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account incoming tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/outgoing-token/{contract}": {
      "get": {
        "summary": "Get Outgoing Tokens for a Given Account",
        "description": "Retrieves outgoing token transactions for a specified account (contract).",
        "operationId": "getAccountOutgoingTokens",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query outgoing tokens for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account outgoing tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/bridge/probable-eth-addresses/{account}": {
      "get": {
        "summary": "Get Probable ETH Addresses",
        "description": "Retrieves probable Ethereum addresses associated with a NEAR account.",
        "operationId": "getProbableEthAddresses",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The NEAR account to query probable ETH addresses for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with probable ETH addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/event-historic/account/relationships/{contract}": {
      "get": {
        "summary": "Get Account Relationships",
        "description": "Gives relationships between an account and other accounts having the search parameter in their name.",
        "operationId": "getAccountRelationships",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The main account or contract address to analyze relationships for."
          },
          {
            "in": "query",
            "name": "search",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 4
            },
            "description": "Account name or part of account name to search for (minimum 4 characters)."
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "string",
              "default": "50"
            },
            "description": "Limit the number of results. Maximum 50, defaults to 50 if not specified."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account relationships"
          },
          "400": {
            "description": "Bad Request - Missing or invalid search parameter"
          },
          "422": {
            "description": "Unprocessable Entity - Invalid request parameters"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/nft-transfer/{contract}": {
      "get": {
        "summary": "Get Account NFT Transfers",
        "description": "Retrieves NFT transfers for a specified account.",
        "operationId": "getAccountNFTTransfers",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query NFT transfers for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account NFT transfers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/social/{contract}": {
      "get": {
        "summary": "Get Account Social Connections",
        "description": "Retrieves social connections for a specified account.",
        "operationId": "getAccountSocialConnections",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query social connections for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account social connections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/pikespeak/account/contract-interactions/{contract}": {
      "get": {
        "summary": "Get Account Contract Interactions",
        "description": "Retrieves contract interactions for a specified account.",
        "operationId": "getAccountContractInteractions",
        "parameters": [
          {
            "in": "path",
            "name": "contract",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The account or contract address to query contract interactions for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with account contract interactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
